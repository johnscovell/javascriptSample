{"version":3,"sources":["components/layout/Navbar.js","Pages/home.js","Pages/about.js","Pages/jscovell.js","App.js","util/theme.js","serviceWorker.js","index.js"],"names":["Navbar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","AppBar","color","Toolbar","className","react","Button","component","Link","to","Component","audioClips","sound","label","home","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","soundPlay","src","Howl","html5","play","RenderButtonSound","map","soundObj","index","Card","onClick","CardContent","Typography","variant","align","about","Grid","container","spacing","item","sm","xs","jscovell","direction","alignItems","justifyContent","style","minHeight","Paper","width","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","form","textAlign","image","margin","pageTitle","textField","button","marginTop","position","customError","fontSize","progress","invisibleSeparator","border","visibleSeparator","borderBottom","marginBotton","App","MuiThemeProvider_default","react_router_dom","layout_Navbar","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.388c2b02.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\n\n//MUI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n//Icons\nimport HomeIcon from '@material-ui/icons/Home';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <AppBar color=\"white\">\n        <Toolbar className=\"nav-container\">\n            <Fragment>\n                <Button color=\"black\" component={Link} to=\"/about\">MOOBLY</Button>\n                <Button color=\"black\" component={Link} to=\"/\">KREW</Button>\n           </Fragment>  \n        </Toolbar>\n      </AppBar>\n  \n    )\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport {Howl} from 'howler';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst audioClips = [\n  {sound: \"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/01%20Glad%20You're%20Here%20MASTER.mp3?alt=media&token=bc2359dc-3bea-4c9f-9856-d7342b9ecacf\", label: 'glad youre here'}\n]\n\n\nclass home extends Component {\n  soundPlay = (src) => {\n    const sound = new Howl ({\n        src,\n        html5: true\n    });\n    \n    sound.play();\n}\n\nRenderButtonSound = () => {\n    return audioClips.map((soundObj, index) => {\n        return(\n            <Card>\n                <button key={index} onClick={() => this.soundPlay(soundObj.sound)}>\n                {soundObj.label}\n                </button>\n                <CardContent>\n                    <Typography variant=\"h4\" align=\"right\">\n                        don't click that button again\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"right\">\n                        (just kidding...its broken)\n                    </Typography>\n                </CardContent>     \n            </Card>\n        )\n    })\n}\n\nrender() {\n    //const { classes, song : {artistName, songName, albumName, genre, audioUrl } } = this.props;\n    \n    \n    return (\n        this.RenderButtonSound()\n    )\n};\n}\n\nexport default home;\n\n\n//songMarkup contains all of the urls to the songs in the database. I can't play the audio with ReactPlayer\n//because it's expecting only 1 url (at least that might be the problem). I would need a different ReactPlayer\n//for each url. What if I count how many songs, create a for loop that makes ReactPlayers for all available songs.\n//Eh probably won't work.\n\n/* <Grid item sm={8} xs={10}>\n<h1>MOOBLY KREW!!!!!!!!!!!!!</h1>\n</Grid>\n<Grid item sm={4} xs={10}>\n  <body2>wowowoowowowowow</body2>\n</Grid>\n*/","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass about extends Component {\n  \n  render() {\n    \n    return (\n      <Grid container spacing={10}>\n        <Grid item sm={8} xs ={10}>\n          <h1>sheitt</h1>\n        </Grid>\n        <Grid item sm={4} xs={10}>\n          <body2>hehe</body2>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default about;\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Paper } from '@material-ui/core';\n\nclass jscovell extends Component {\n  \n  render() {\n    \n    return (\n        <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ minHeight: '100vh' }}\n        >\n        <Grid item ={3}>\n            <h1>Official John Scovell EPK: 2023</h1>\n        </Grid>   \n        <Grid item = {1}>\n            <body>The work of the artist known as John Scovell insinuates a necessity to\n                all that is righteous and just. All that is holy and pure.\n            </body>\n        </Grid>\n\n        <Paper variant=\"outlined\">\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n         <img width={100} src=\"https://firebasestorage.googleapis.com/v0/b/mooblykrew3.appspot.com/o/jscovell.png?alt=media&token=0d9f596c-0a89-4638-9de3-1af64f6c269a\" />\n        </Paper>\n\n        <Grid item = {1}>\n            <h2>#################################\n            </h2>\n        </Grid>\n\n        </Grid>\n      \n    );\n  }\n}\n\n\nexport default jscovell;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from './util/theme';\n\n//Components\nimport Navbar from './components/layout/Navbar.js';\n\n//Pages\nimport home from './Pages/home';\nimport about from './Pages/about';\nimport jscovell from './Pages/jscovell';\n\nconst theme = createMuiTheme(themeFile);\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n            <Router>\n                <div className=\"container\">\n                <Navbar />\n                  <Switch>\n                    <Route exact path=\"/\" component={home} />\n                    <Route exact path=\"/about\" component={about} />\n                    <Route exact path=\"/jscovell\" component={jscovell} />\n                  </Switch>\n                </div>\n            </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\n  palette: {\n      primary: {\n        light: '#00e676',\n        main: '#00c853',\n        dark: '#212121',\n        contrastText: '#fff'\n      },\n      secondary: {\n        light: '#00b0ff',\n        main: '#0091ea',\n        dark: '#004d40',\n        contrastText: '#fff'\n      }\n    },\n    typography: {\n      useNextVariants: true\n    },\n    form: {\n        textAlign: 'center'\n      },\n    image: {\n      margin: '20px auto 20px auto',\n      width: '20%'\n    },\n    pageTitle: {\n      margin: '10 auto 10 auto'\n    },\n    textField: {\n      margin: '10 auto 10 auto'\n    },\n    button: {\n      marginTop: 20,\n      position: 'relative'\n    },\n    customError: {\n      color: \"red\",\n      fontSize: \"0.8rem\",\n      marginTop: 10\n    },\n    progress: {\n      position: \"absolute\"\n    },\n    invisibleSeparator: {\n      border: 'none',\n      margin: 4\n    },\n    visibleSeparator: {\n      width: '100%',\n      borderBottom: '1px solid rgba(0,0,0,0.1)',\n      marginBotton: 20\n    }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}